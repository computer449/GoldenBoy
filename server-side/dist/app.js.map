{"version":3,"sources":["../app.js"],"names":["express","require","mongoose","Parent","bodyParser","cors","app","mongoDB","routes","default","goals","chores","user","request","child","parent","game","moneyHistory","use","urlencoded","extended","json","server","listen","address","port","console","log","connect","useNewUrlParser","useUnifiedTopology","connection","on","error","bind","set","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,SAASF,QAAQ,qBAAR,CAAb;AACA,IAAIG,aAAaH,QAAQ,aAAR,CAAjB;AACA,IAAII,OAAOJ,QAAQ,MAAR,CAAX;;AAEA,IAAIK,MAAMN,SAAV;AACA,IAAIO,UAAU,sGAAd;;AAEA,IAAMC,SAASP,QAAQ,iBAAR,EAA2BQ,OAA1C;AACA,IAAMC,QAAQT,QAAQ,2BAAR,EAAqCQ,OAAnD;AACA,IAAME,SAASV,QAAQ,6BAAR,EAAuCQ,OAAtD;AACA,IAAMG,OAAOX,QAAQ,2BAAR,EAAqCQ,OAAlD;AACA,IAAMI,UAAUZ,QAAQ,iCAAR,EAA2CQ,OAA3D;AACA,IAAMK,QAAQb,QAAQ,6BAAR,EAAuCQ,OAArD;AACA,IAAMM,SAASd,QAAQ,+BAAR,EAAyCQ,OAAxD;AACA,IAAMO,OAAOf,QAAQ,2BAAR,EAAqCQ,OAAlD;AACA,IAAMQ,eAAehB,QAAQ,2CAAR,EAAqDQ,OAA1E;;AAEAH,IAAIY,GAAJ,CAAQb,MAAR;;AAEA;AACAC,IAAIY,GAAJ,CACEd,WAAWe,UAAX,CAAsB;AACpBC,YAAU;AADU,CAAtB,CADF;AAKAd,IAAIY,GAAJ,CAAQd,WAAWiB,IAAX,EAAR;AACAf,IAAIY,GAAJ,CAAQ,GAAR,EAAaV,MAAb;AACAF,IAAIY,GAAJ,CAAQ,QAAR,EAAkBR,KAAlB;AACAJ,IAAIY,GAAJ,CAAQ,QAAR,EAAkBJ,KAAlB;AACAR,IAAIY,GAAJ,CAAQ,UAAR,EAAoBL,OAApB;AACAP,IAAIY,GAAJ,CAAQ,QAAR,EAAkBP,MAAlB;AACAL,IAAIY,GAAJ,CAAQ,OAAR,EAAiBN,IAAjB;AACAN,IAAIY,GAAJ,CAAQ,SAAR,EAAmBH,MAAnB;AACAT,IAAIY,GAAJ,CAAQ,OAAR,EAAiBF,IAAjB;AACAV,IAAIY,GAAJ,CAAQ,eAAR,EAAyBD,YAAzB;;AAEA;AACA,IAAMK,SAAShB,IAAIiB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AAAA,wBACVD,OAAOE,OAAP,EADU;AAAA,MAC5BA,OAD4B,mBAC5BA,OAD4B;AAAA,MACnBC,IADmB,mBACnBA,IADmB;;AAEpCC,UAAQC,GAAR,0BAAmCH,OAAnC,SAA8CC,IAA9C;;AAEAvB,WAAS0B,OAAT,CAAiBrB,OAAjB,EAA0B,EAAEsB,iBAAiB,IAAnB,EAAyBC,oBAAoB,IAA7C,EAA1B;AACA5B,WAAS6B,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgCN,QAAQO,KAAR,CAAcC,IAAd,CAAmBR,OAAnB,EAA4B,2BAA5B,CAAhC;AACAxB,WAASiC,GAAT,CAAa,gBAAb,EAA+B,IAA/B;AACD,CAPc,CAAf;;AASAC,OAAOC,OAAP,GAAiB/B,GAAjB","file":"app.js","sourcesContent":["var express = require(\"express\");\r\nvar mongoose = require(\"mongoose\");\r\nvar Parent = require(\"./src/parent/parent\");\r\nvar bodyParser = require(\"body-parser\");\r\nvar cors = require(\"cors\");\r\n\r\nvar app = express();\r\nvar mongoDB = \"mongodb+srv://dollarz:dollarz123@omerm-cluster.pzgxz.mongodb.net/dollarz?retryWrites=true&w=majority\";\r\n\r\nconst routes = require(\"./routes/router\").default;\r\nconst goals = require(\"./src/goal/goalController\").default;\r\nconst chores = require(\"./src/chore/choreController\").default;\r\nconst user = require(\"./src/user/userController\").default;\r\nconst request = require(\"./src/request/requestController\").default;\r\nconst child = require(\"./src/child/childController\").default;\r\nconst parent = require(\"./src/parent/parentController\").default;\r\nconst game = require(\"./src/game/gameController\").default;\r\nconst moneyHistory = require(\"./src/moneyHistory/moneyHistoryController\").default;\r\n\r\napp.use(cors());\r\n\r\n// Set all routes from routes folder\r\napp.use(\r\n  bodyParser.urlencoded({\r\n    extended: false,\r\n  })\r\n);\r\napp.use(bodyParser.json());\r\napp.use(\"/\", routes);\r\napp.use(\"/goals\", goals);\r\napp.use(\"/child\", child);\r\napp.use(\"/request\", request);\r\napp.use(\"/chore\", chores);\r\napp.use(\"/user\", user);\r\napp.use(\"/parent\", parent);\r\napp.use(\"/game\", game);\r\napp.use(\"/moneyHistory\", moneyHistory);\r\n\r\n// Launch the server on port 3000\r\nconst server = app.listen(3000, () => {\r\n  const { address, port } = server.address();\r\n  console.log(`Listening at http://${address}:${port}`);\r\n\r\n  mongoose.connect(mongoDB, { useNewUrlParser: true, useUnifiedTopology: true });\r\n  mongoose.connection.on(\"error\", console.error.bind(console, \"MongoDB connection error:\"));\r\n  mongoose.set(\"useCreateIndex\", true);\r\n});\r\n\r\nmodule.exports = app;\r\n"]}